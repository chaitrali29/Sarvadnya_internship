# -*- coding: utf-8 -*-
"""Q&A Bot with GPT-Index and LangChain

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JYTczk-4D86XNn0GTaXux5yi2-LfoIPd
		
		https://www.youtube.com/watch?v=Dhc_fq5iCnU
"""

from gpt_index import SimpleDirectoryReader, GPTListIndex, GPTSimpleVectorIndex, LLMPredictor, PromptHelper
from langchain import OpenAI
import sys
import os


# openai.api_key = os.getenv("OPENAI_API_KEY")

def construct_index(directory_path):
    # set maximum input size
    max_input_size = 4096
    # set number of output tokens
    num_outputs = 256
    # set maximum chunk overlap
    max_chunk_overlap = 20
    # set chunk size limit
    chunk_size_limit = 600

    prompt_helper = PromptHelper(max_input_size, num_outputs, max_chunk_overlap, chunk_size_limit=chunk_size_limit)

    # define LLM
    llm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name="text-ada-001", max_tokens=num_outputs))

    documents = SimpleDirectoryReader(directory_path).load_data()

    book_index = GPTSimpleVectorIndex(documents, llm_predictor=llm_predictor, prompt_helper=prompt_helper)

    book_index.save_to_disk('data/book/index.json')

    return book_index


def ask_bot(input_index='index.json'):
    saved_index = GPTSimpleVectorIndex.load_from_disk(input_index)
    while True:
        query = input('What do you want to ask the bot?   \n')
        response = saved_index.query(query, response_mode="compact")
        print("\nBot says: \n\n" + response.response + "\n\n\n")


index = construct_index("data/book/")
ask_bot('data/book/index.json')
